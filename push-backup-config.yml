- name: Pull pubkeys
  hosts: dockerHosts:localHost
  vars_files:
    - vars/main.yml
  roles:
    - 9xeb.pull-pubkeys

- name: Push pubkeys to backup host
  hosts: backupHosts
  vars_files:
    - vars/main.yml
  vars:
    ssh_user: borg
  pre_tasks:
    - name: Add unprivileged user for backups
      ansible.builtin.user:
        name: borg
        group: ssh
  roles:
    - 9xeb.push-pubkeys
    - 9xeb.setup-borg-server

- name: Setup borg clients and servers
  hosts: all
  vars_files:
    - vars/main.yml
  tasks:
    - name: Configure backup cronjob in client
      include_role:
        name: m3nu.ansible_role_borgbackup
      vars:
        borg_repository: "{{ 'ssh://borg@' ~ backup_item.1 ~ '/./' ~ inventory_hostname ~ '-' ~ backup_item.0.repo_name }}"
        borg_source_directories: "{{ backup_item.0.source_directories }}"
        borg_encryption_passphrase: "{{ backup_item.0.repo_password }}"
        borgmatic_config_name: "{{ backup_item.1 ~ '_' ~ backup_item.0.repo_name ~ '.yaml' }}"
        borg_retention_policy:
          keep_daily: 1
          keep_weekly: 1
          keep_monthly: 1
      loop: "{{ requested_backups|product(groups['backupHosts'])|list }}"
      loop_control:
        loop_var: backup_item
      when: "backup_item.0.target in group_names"

    - name: Ensure all repos exist
      command: borgmatic -c /etc/borgmatic/{{ backup_item.1 ~ '.yaml' }} init -e repokey
#      loop: "{{ groups['backupHosts'] }}"
      loop: "{{ requested_backups|product(groups['backupHosts'])|list }}"
      loop_control:
        loop_var: backup_item
      register: repo_check
      failed_when: 'repo_check.rc != 0 and not "exit status 2" in repo_check.stderr'
      when: "backup_item.0.target in group_names"

    - name: Edit cronjob to enable all backup configs that are requested by user
      lineinfile:
        dest: /etc/cron.d/borgmatic        
        regexp: "{{ 'root borgmatic -c /etc/borgmatic/' ~ backup_item.1 ~ '_' ~ backup_item.0.repo_name ~ '.yaml' ~ '$' }}"
        backrefs: true
        line: "{{ '43 1 * * * root borgmatic -c /etc/borgmatic/' ~ backup_item.1 ~ '_' ~ backup_item.0.repo_name ~ '.yaml' }}"
        state: present
      loop: "{{ requested_backups|product(groups['backupHosts'])|list }}"
      loop_control:
        loop_var: backup_item
      when: "backup_item.0.target in group_names"


