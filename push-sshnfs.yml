- name: Pull pubkeys
  hosts: dockerHosts
  vars_files:
    - vars/main.yml
  tasks:
    - name: Setup openssh client
      package:
        name: openssh-client
        state: latest
    - name: Create .ssh directory if non existent
      file:
        path: "/root/.ssh"
        state: directory
        owner: root
        group: root
        mode: '0600'
    - name: Generate key pair if non existent
      openssh_keypair:
        path: /root/.ssh/id_rsa
        size: 4096
    - name: Retrieve ssh pubkey
      fetch:
        src: /root/.ssh/id_rsa.pub
        dest: "{{ './.ssh/' ~ inventory_hostname ~ '.id_rsa.pub' }}"
        flat: yes
  # roles:
  #   - 9xeb.pull-pubkeys

- name: Push pubkeys and setup sshnfs server
  hosts: storageServers
  vars_files:
    - vars/main.yml
  vars:
    ssh_user: "{{ ssh_tunneling_user }}"
  tasks:
    - name: Ensure nfs-kernel-server package is available
      package:
        name: nfs-kernel-server
        state: present

    # push-pubkeys
    - name: Copy sshClients pubkeys to target authorized keys
      ansible.posix.authorized_key:
        user: "{{ ssh_user }}"
        state: present
        key: "{{ lookup('file', item) }}"
      with_fileglob:
        - "./.ssh/*.pub"

    # prepare-exports
    - name: Prepare volume directories in export directory
      file:
        path: "{{ export_dir ~ '/' ~ item }}"
        state: directory
      loop: "{{ docker_volumes }}"
      when: 'docker_volumes is defined'
    - name: Add unprivileged user for nfs via ssh tunneling purposes
      ansible.builtin.user:
        name: "{{ ssh_tunneling_user }}"
    - name: Ensuring nfs export is present
      lineinfile:
        path: /etc/exports
        line: "{{ export_dir ~ ' localhost(rw,async,wdelay,no_subtree_check,no_root_squash,insecure)' }}"
    - name: Refresh active exports
      command: exportfs -arv

    # configure-ssh-user
    # for redhat family the default firewalld configuration is fine (nfs not reachable from outside)
    - name: Add unprivileged user for nfs via ssh tunneling purposes
      ansible.builtin.user:
        name: "{{ ssh_tunneling_user }}"
        group: ssh

      # check if AllowGroups line is present
    - command: grep "^AllowGroups " /etc/ssh/sshd_config
      ignore_errors: yes
      register: allowed_groups_list
        # check if AllowUsers line contains desired user
    - command: grep '^AllowGroups .*ssh.*' /etc/ssh/sshd_config
      ignore_errors: yes
      register: allowed_groups_list_with_ssh_group
    - name: Append ssh to SSH allowed groups
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^AllowGroups .+"
        line: "{{ allowed_groups_list.stdout }} ssh"
      when:
        - allowed_groups_list.rc == 0
        - allowed_groups_list_with_ssh_group.rc != 0
    - name: Add AllowGroups line containing group ssh
      lineinfile:
        path: /etc/ssh/sshd_config
        line: AllowGroups ssh
      when:
        - allowed_groups_list.rc != 0
  # roles:
  #   - 9xeb.push-pubkeys
  #   - 9xeb.setup-sshnfs-server

- name: Setup sshnfs clients
  hosts: dockerHosts
  vars_files:
    - vars/main.yml
  roles:
    - 9xeb.setup-sshnfs-client
